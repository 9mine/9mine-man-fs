<action name=AUPLAY(1)>AUPLAY(1)</action>                                               <action name=AUPLAY(1)>AUPLAY(1)</action>

NAME
<style color=#00ffffff size=1>.</style>            auplay, auhdr, raw2iaf, wav2iaf - basic audio output and
<style color=#00ffffff size=1>.</style>            conversion

SYNOPSIS
<style color=#00ffffff size=1>.</style>            auplay file ...

<style color=#00ffffff size=1>.</style>            auhdr file ...

<style color=#00ffffff size=1>.</style>            raw2iaf \[ option ... \] \[ -o output \] input

<style color=#00ffffff size=1>.</style>            wav2iaf \[ input \]

<style color=#00ffffff size=1>.</style>            wav2iaf

DESCRIPTION
<style color=#00ffffff size=1>.</style>            Auplay plays each file in turn on the audio device
<style color=#00ffffff size=1>.</style>            /dev/audio (see <action name=audio(3)>audio(3)</action>), setting the device's
<style color=#00ffffff size=1>.</style>            characteristics in /dev/audioctl to match those of the file.
<style color=#00ffffff size=1>.</style>            It uses stream (see <action name=sys-read(2)>sys-read(2)</action>) to stream the data to the
<style color=#00ffffff size=1>.</style>            device at high priority. All files played must be in
<style color=#00ffffff size=1>.</style>            `Inferno audio format', as defined by <action name=audio(6)>audio(6)</action>.

<style color=#00ffffff size=1>.</style>            Auhdr writes the header of each Inferno audio input file to
<style color=#00ffffff size=1>.</style>            the standard output. The header describes the data in a form
<style color=#00ffffff size=1>.</style>            that can be written directly to /dev/audioctl to set the
<style color=#00ffffff size=1>.</style>            device's characteristics.

<style color=#00ffffff size=1>.</style>            Raw2iaf converts the input file, adds an appropriate header
<style color=#00ffffff size=1>.</style>            to describe the data in the Inferno format, and writes the
<style color=#00ffffff size=1>.</style>            result to the output file. The options tell how the bytes in
<style color=#00ffffff size=1>.</style>            the input file should be interpreted:

<style color=#00ffffff size=1>.</style>            -8   rate is 8000 Hz

<style color=#00ffffff size=1>.</style>            -1   rate is 11025 Hz

<style color=#00ffffff size=1>.</style>            -2   rate is 22050 Hz

<style color=#00ffffff size=1>.</style>            -4   rate is 44100 Hz

<style color=#00ffffff size=1>.</style>            -m   mono (one channel)

<style color=#00ffffff size=1>.</style>            -s   stereo (two channels)

<style color=#00ffffff size=1>.</style>            -b   each sample in each channel is one byte (unsigned)

<style color=#00ffffff size=1>.</style>            -w   each sample in each channel is 16-bits (little-endian)

<style color=#00ffffff size=1>.</style>            -a   input is a-law encoded

<style color=#00ffffff size=1>.</style>            -u   input is Âµ-law encoded

<style color=#00ffffff size=1>.</style>            -p   input is PCM encoded

<style color=#00ffffff size=1>.</style>            Wav2iaf reads the input file, which must be in Windows WAV
<style color=#00ffffff size=1>.</style>            format and encoded using PCM, and converts the data to
<style color=#00ffffff size=1>.</style>            Inferno format on the standard output.

SOURCE
<style color=#00ffffff size=1>.</style>            /appl/cmd/auplay.b
<style color=#00ffffff size=1>.</style>            /appl/cmd/raw2iaf.b
<style color=#00ffffff size=1>.</style>            /appl/cmd/wav2iaf.b

SEE ALSO
<style color=#00ffffff size=1>.</style>            <action name=sys-read(2)>sys-read(2)</action>, <action name=audio(3)>audio(3)</action>, <action name=audio(6)>audio(6)</action> \" sets rate, chans, bits,
<style color=#00ffffff size=1>.</style>            enc

<style color=#00ffffff size=1>.</style>                                Inferno Manual
