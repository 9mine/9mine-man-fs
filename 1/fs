<action name=FS(1)>FS(1)</action>                                                       <action name=FS(1)>FS(1)</action>

NAME
<style color=#00ffffff size=1>.</style>            fs - file-hierarchy traversal

SYNOPSIS
<style color=#00ffffff size=1>.</style>            fs verb arg

DESCRIPTION
<style color=#00ffffff size=1>.</style>            Fs evaluates an expression whose values represent the
<style color=#00ffffff size=1>.</style>            contents of a hierarchical filesystem. There are six types
<style color=#00ffffff size=1>.</style>            of value:

<style color=#00ffffff size=1>.</style>            fs        The complete contents of a filesystem.

<style color=#00ffffff size=1>.</style>            entries   Information about the entries in a filesystem
<style color=#00ffffff size=1>.</style>                      without their content.

<style color=#00ffffff size=1>.</style>            gate      A condition that can be used with conditional
<style color=#00ffffff size=1>.</style>                      verbs. A gate is open to entries satisfying
<style color=#00ffffff size=1>.</style>                      particular criteria.

<style color=#00ffffff size=1>.</style>            selector  A comparator which compares two entries and
<style color=#00ffffff size=1>.</style>                      selects one, both or neither of them.

<style color=#00ffffff size=1>.</style>            string    A simple string literal, represented by itself, or
<style color=#00ffffff size=1>.</style>                      quoted according to the usual shell quoting rules.

<style color=#00ffffff size=1>.</style>            command   A shell command, represented by an ``@'' character
<style color=#00ffffff size=1>.</style>                      followed by a braced block containing the shell
<style color=#00ffffff size=1>.</style>                      commands.

<style color=#00ffffff size=1>.</style>            void      No value. An expression of this type cannot be
<style color=#00ffffff size=1>.</style>                      used as an argument to any verb.

<style color=#00ffffff size=1>.</style>            A value is represented either by a literal (a string or
<style color=#00ffffff size=1>.</style>            shell command), or by a braced block, {verb \[arg...\]}, whose
<style color=#00ffffff size=1>.</style>            value is the result of evaluating verb with the given
<style color=#00ffffff size=1>.</style>            arguments.

<style color=#00ffffff size=1>.</style>            In the following description of the verbs provided, an entry
<style color=#00ffffff size=1>.</style>            such as:

<style color=#00ffffff size=1>.</style>            print entries -> void

<style color=#00ffffff size=1>.</style>            describes a verb print, which takes one argument of type
<style color=#00ffffff size=1>.</style>            entries, and the result of which is of type void. If the
<style color=#00ffffff size=1>.</style>            type is not one of those described above, it should be taken
<style color=#00ffffff size=1>.</style>            to be of type string.

<style color=#00ffffff size=1>.</style>            With no arguments, fs prints a summary of the available
<style color=#00ffffff size=1>.</style>            verbs. Verbs understood by fs include:

<style color=#00ffffff size=1>.</style>            and gate gate \[gate...\] -> gate
<style color=#00ffffff size=1>.</style>                      And is a gate that is open to an entry if all its
<style color=#00ffffff size=1>.</style>                      arguments are open.

<style color=#00ffffff size=1>.</style>            bundle fs -> void
<style color=#00ffffff size=1>.</style>                      Bundle converts fs to an archival format and
<style color=#00ffffff size=1>.</style>                      writes it to the standard output.

<style color=#00ffffff size=1>.</style>            compose \[-d\] op -> selector
<style color=#00ffffff size=1>.</style>                      Compose implements ``compositing''-style
<style color=#00ffffff size=1>.</style>                      operators, useful when merging filesystems. Op
<style color=#00ffffff size=1>.</style>                      specifies the operator, taking its name from the
<style color=#00ffffff size=1>.</style>                      graphical Porter-Duff equivalent: AinB, AinB, BinA
<style color=#00ffffff size=1>.</style>                      , AoutB, BoutA, A, AoverB, AatopB, AxorB, B,
<style color=#00ffffff size=1>.</style>                      BoverA, or BatopA. For instance, AinB gives the
<style color=#00ffffff size=1>.</style>                      intersection of A and B\; AatopB gives A whereever
<style color=#00ffffff size=1>.</style>                      both A and B exist, and B otherwise. When used as
<style color=#00ffffff size=1>.</style>                      a selector for merge, operators that exclude the
<style color=#00ffffff size=1>.</style>                      union of A and B are not very useful, as they will
<style color=#00ffffff size=1>.</style>                      exclude all common directories at the top level.
<style color=#00ffffff size=1>.</style>                      Given the -d option, compose will allow through
<style color=#00ffffff size=1>.</style>                      directories that would otherwise be excluded in
<style color=#00ffffff size=1>.</style>                      this way, making operators such as AxorB (all that
<style color=#00ffffff size=1>.</style>                      A does not hold in common with B) more useful,
<style color=#00ffffff size=1>.</style>                      although accurate only for regular files.

<style color=#00ffffff size=1>.</style>            depth n -> gate
<style color=#00ffffff size=1>.</style>                      Depth is a gate open only to entries which are
<style color=#00ffffff size=1>.</style>                      within n levels of the root of the filesystem.

<style color=#00ffffff size=1>.</style>            entries fs -> entries
<style color=#00ffffff size=1>.</style>                      Entries produces all the entries contained within
<style color=#00ffffff size=1>.</style>                      fs.

<style color=#00ffffff size=1>.</style>            eval expr -> any
<style color=#00ffffff size=1>.</style>                      Eval evaluates an fs expression and yields its
<style color=#00ffffff size=1>.</style>                      result.

<style color=#00ffffff size=1>.</style>            filter \[-d\]gate fs -> fs
<style color=#00ffffff size=1>.</style>                      The result of filter is a filesystem from which
<style color=#00ffffff size=1>.</style>                      all entries that will not pass through gate, and
<style color=#00ffffff size=1>.</style>                      their descendents, have been removed. If the -d
<style color=#00ffffff size=1>.</style>                      flag is given, only files are filtered -
<style color=#00ffffff size=1>.</style>                      directories bypass the gate.

<style color=#00ffffff size=1>.</style>            ls \[-um\] entries -> void
<style color=#00ffffff size=1>.</style>                      Print each entry in the style of ls -l (see ls
<style color=#00ffffff size=1>.</style>                      (1)). If the -u flag is given, the file access
<style color=#00ffffff size=1>.</style>                      time rather than the file modification time will
<style color=#00ffffff size=1>.</style>                      be printed. If the -m flag is given, the name of
<style color=#00ffffff size=1>.</style>                      the user that last modified the file is printed
<style color=#00ffffff size=1>.</style>                      too.

<style color=#00ffffff size=1>.</style>            exec \[-pP\] \[-t command\] \[-n n\] command entries -> void
<style color=#00ffffff size=1>.</style>                      Run its argument command for each entry in entries
<style color=#00ffffff size=1>.</style>                      . If the -n flag is specified, exec will try to
<style color=#00ffffff size=1>.</style>                      gather n entries together before invoking the
<style color=#00ffffff size=1>.</style>                      command (default 1). The environent variable $file
<style color=#00ffffff size=1>.</style>                      is set to the names of the entries that have been
<style color=#00ffffff size=1>.</style>                      gathered. If the -p flag is given, environment
<style color=#00ffffff size=1>.</style>                      variables are set giving information about the
<style color=#00ffffff size=1>.</style>                      mode, owner, modification time and size of the
<style color=#00ffffff size=1>.</style>                      entry (they are named after the equivalent field
<style color=#00ffffff size=1>.</style>                      names in the Dir structure\; see <action name=sys-stat(2)>sys-stat(2)</action>). This
<style color=#00ffffff size=1>.</style>                      option is only valid when n is 1. The -P flag
<style color=#00ffffff size=1>.</style>                      causes all the other fields in the Dir structure
<style color=#00ffffff size=1>.</style>                      to be included too. Note that the command is run
<style color=#00ffffff size=1>.</style>                      in the same shell context each time, so
<style color=#00ffffff size=1>.</style>                      environment variable set on one execution can be
<style color=#00ffffff size=1>.</style>                      retrieved on the next. The -t flag can be used to
<style color=#00ffffff size=1>.</style>                      specify a command which will be executed just
<style color=#00ffffff size=1>.</style>                      before termination.

<style color=#00ffffff size=1>.</style>            match \[-ar\] pattern -> gate
<style color=#00ffffff size=1>.</style>                      Match is a gate that is open if the entry's
<style color=#00ffffff size=1>.</style>                      filename matches the pattern. If the -a flag is
<style color=#00ffffff size=1>.</style>                      given, the whole path will be used for the match.
<style color=#00ffffff size=1>.</style>                      If -r is specified, the pattern is evaluated as a
<style color=#00ffffff size=1>.</style>                      regular expression, otherwise it is a shell-style
<style color=#00ffffff size=1>.</style>                      pattern in the style of <action name=filepat(2)>filepat(2)</action>.

<style color=#00ffffff size=1>.</style>            merge \[-1\] \[-c selector\] fs fs \[fs...\] -> fs
<style color=#00ffffff size=1>.</style>                      Recursively merge the contents of its argument
<style color=#00ffffff size=1>.</style>                      filesystems. Selector is consulted to see which
<style color=#00ffffff size=1>.</style>                      entries are chosen for the result\; if not given,
<style color=#00ffffff size=1>.</style>                      entries are resolved in favour of the first
<style color=#00ffffff size=1>.</style>                      filesystem (equivalent to {compose AoverB}). If
<style color=#00ffffff size=1>.</style>                      the -1 flag is given, merging takes place only in
<style color=#00ffffff size=1>.</style>                      the top-level directory.

<style color=#00ffffff size=1>.</style>            mode spec -> gate
<style color=#00ffffff size=1>.</style>                      Mode is a gate that lets through entries whose
<style color=#00ffffff size=1>.</style>                      file permissions satisfy spec, which is a string
<style color=#00ffffff size=1>.</style>                      in the style of <action name=chmod(1)>chmod(1)</action>. If the op field is +,
<style color=#00ffffff size=1>.</style>                      the specified permissions must be present\; if -,
<style color=#00ffffff size=1>.</style>                      they must be absent, and if =, they must be
<style color=#00ffffff size=1>.</style>                      exactly as given. The directory and auth modes are
<style color=#00ffffff size=1>.</style>                      specified with the characters ``d'' and ``A''
<style color=#00ffffff size=1>.</style>                      respectively.

<style color=#00ffffff size=1>.</style>            not gate -> gate
<style color=#00ffffff size=1>.</style>                      Not is a gate open to an entry if its argument is
<style color=#00ffffff size=1>.</style>                      not.

<style color=#00ffffff size=1>.</style>            or gate gate \[gate...\] -> gate
<style color=#00ffffff size=1>.</style>                      Or is a gate open to an entry if any argument is
<style color=#00ffffff size=1>.</style>                      open.

<style color=#00ffffff size=1>.</style>            path \[-x\] path... -> gate
<style color=#00ffffff size=1>.</style>                      Path is a gate open to an entry whose full
<style color=#00ffffff size=1>.</style>                      pathname is an ancestor or a descendent of any
<style color=#00ffffff size=1>.</style>                      path. If -x is specified, the gate is open to any
<style color=#00ffffff size=1>.</style>                      path except descendents of the paths given.

<style color=#00ffffff size=1>.</style>            pipe \[-1pP\] command fs -> void
<style color=#00ffffff size=1>.</style>                      Pipe is similar to exec, except that the contents
<style color=#00ffffff size=1>.</style>                      of all files in fs are piped through command.
<style color=#00ffffff size=1>.</style>                      Unless the -1 option is given, command is started
<style color=#00ffffff size=1>.</style>                      once for each file, with $file set to its name,
<style color=#00ffffff size=1>.</style>                      and other environment variables set according to
<style color=#00ffffff size=1>.</style>                      the -p or -P options, as for exec. If the -1
<style color=#00ffffff size=1>.</style>                      option is specified, command is started once only
<style color=#00ffffff size=1>.</style>                      - all file data is piped through that.

<style color=#00ffffff size=1>.</style>            print entries -> void
<style color=#00ffffff size=1>.</style>                      Print the path name of each entry.

<style color=#00ffffff size=1>.</style>            proto \[-r root\] protofile -> fs
<style color=#00ffffff size=1>.</style>                      Evaluate protofile as a <action name=mkfs(8)>mkfs(8)</action> proto file. If
<style color=#00ffffff size=1>.</style>                      root is specified, it will be used as the root of
<style color=#00ffffff size=1>.</style>                      the resulting fs.

<style color=#00ffffff size=1>.</style>            query command -> gate
<style color=#00ffffff size=1>.</style>                      Query is a gate that runs command to determine
<style color=#00ffffff size=1>.</style>                      whether it is open: an empty exit status from the
<style color=#00ffffff size=1>.</style>                      command yields an open gate. The environment
<style color=#00ffffff size=1>.</style>                      variable $file is set for the command to the path
<style color=#00ffffff size=1>.</style>                      name of the entry that is being queried for.

<style color=#00ffffff size=1>.</style>            run command -> string
<style color=#00ffffff size=1>.</style>                      Run runs command and substitutes the value of the
<style color=#00ffffff size=1>.</style>                      environment variable $s after its invocation. $s
<style color=#00ffffff size=1>.</style>                      must have exactly one element.

<style color=#00ffffff size=1>.</style>            select gate entries -> entries
<style color=#00ffffff size=1>.</style>                      Select only those entries within entries that will
<style color=#00ffffff size=1>.</style>                      pass through gate. Descendents of elided entries
<style color=#00ffffff size=1>.</style>                      are not affected.

<style color=#00ffffff size=1>.</style>            setroot \[-c\] path fs -> fs
<style color=#00ffffff size=1>.</style>                      Setroot sets the name of the root directory of fs.
<style color=#00ffffff size=1>.</style>                      If the -c flag is given, the elements in the root
<style color=#00ffffff size=1>.</style>                      directory will be made explicit in the hierarchy
<style color=#00ffffff size=1>.</style>                      (i.e. the name of the top directory will not
<style color=#00ffffff size=1>.</style>                      contain any / characters).

<style color=#00ffffff size=1>.</style>            size entries -> void
<style color=#00ffffff size=1>.</style>                      Print the sum of the size of all entries, in
<style color=#00ffffff size=1>.</style>                      bytes.

<style color=#00ffffff size=1>.</style>            unbundle file -> fs
<style color=#00ffffff size=1>.</style>                      Unbundle reads an archive as produced by bundle
<style color=#00ffffff size=1>.</style>                      from file\; its result is the contents of the
<style color=#00ffffff size=1>.</style>                      filesystem that was originally bundled. If file is
<style color=#00ffffff size=1>.</style>                      ``-'', the standard input is read.

<style color=#00ffffff size=1>.</style>            walk path -> fs
<style color=#00ffffff size=1>.</style>                      Walk produces a filesystem that's the result of
<style color=#00ffffff size=1>.</style>                      traversing all the files and directories
<style color=#00ffffff size=1>.</style>                      underneath path.

<style color=#00ffffff size=1>.</style>            write dir fs -> void
<style color=#00ffffff size=1>.</style>                      Write the contents of fs to the filesystem rooted
<style color=#00ffffff size=1>.</style>                      at dir . If dir is empty, fs will be written to
<style color=#00ffffff size=1>.</style>                      the root directory originally associated with fs.

<style color=#00ffffff size=1>.</style>            As a convenience, fs carries out some automatic type
<style color=#00ffffff size=1>.</style>            conversions (conversions are applied recursively, so for
<style color=#00ffffff size=1>.</style>            instance, an fs-valued expression at the top level will
<style color=#00ffffff size=1>.</style>            converted to void by applying {print {entries fs}}.

<style color=#00ffffff size=1>.</style>            string->fs
<style color=#00ffffff size=1>.</style>                 The result is {walk string}.

<style color=#00ffffff size=1>.</style>            fs->entries
<style color=#00ffffff size=1>.</style>                 The result is {entries fs}.

<style color=#00ffffff size=1>.</style>            string->gate
<style color=#00ffffff size=1>.</style>                 The result is {match string}.

<style color=#00ffffff size=1>.</style>            entries->void
<style color=#00ffffff size=1>.</style>                 The result is {print entries}.

<style color=#00ffffff size=1>.</style>            command->string
<style color=#00ffffff size=1>.</style>                 The result is {run command}.

EXAMPLES
<style color=#00ffffff size=1>.</style>            Print the size of all files below the current directory:
<style color=#00ffffff size=1>.</style>            	fs size .
<style color=#00ffffff size=1>.</style>            Show the names of all files in x that aren't in y:
<style color=#00ffffff size=1>.</style>            	fs select {mode -d} {merge -c {compose -d AoutB} x y}
<style color=#00ffffff size=1>.</style>            Remove all files from /appl ending in .dis:
<style color=#00ffffff size=1>.</style>            	fs exec @{rm $file} {select *.dis /appl}
<style color=#00ffffff size=1>.</style>            Recursively copy the current directory to /tmp/foo.
<style color=#00ffffff size=1>.</style>            	fs bundle . | fs write /tmp/foo {unbundle -}
<style color=#00ffffff size=1>.</style>            A simpler method of the above:
<style color=#00ffffff size=1>.</style>            	fs write /tmp/foo .
<style color=#00ffffff size=1>.</style>            Interactively remove all regular files from one level of the
<style color=#00ffffff size=1>.</style>            current directory:

<style color=#00ffffff size=1>.</style>                 fs exec @{rm $file} {select {query
<style color=#00ffffff size=1>.</style>                 	@{echo -n $file:\; ~ `{read} y yes}}
<style color=#00ffffff size=1>.</style>                 	{select {mode -d} {filter {depth 1} .}}}

<style color=#00ffffff size=1>.</style>            Create a new archive containing those files from below the
<style color=#00ffffff size=1>.</style>            current directory that were held in an old archive:
<style color=#00ffffff size=1>.</style>            	fs bundle {merge -c {compose AinB} . {unbundle old.bundle}} > new.bundle

SOURCE
<style color=#00ffffff size=1>.</style>            /appl/cmd/fs.b
<style color=#00ffffff size=1>.</style>            /appl/cmd/fs/*.b
<style color=#00ffffff size=1>.</style>            /appl/lib/fslib.b

SEE ALSO
<style color=#00ffffff size=1>.</style>            <action name=sh(1)>sh(1)</action>

<style color=#00ffffff size=1>.</style>                                Inferno Manual
