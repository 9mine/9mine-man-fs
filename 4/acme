<action name=ACME(4)>ACME(4)</action>                                                   <action name=ACME(4)>ACME(4)</action>

NAME
<style color=#00ffffff size=1>.</style>            acme - control files for text windows

SYNOPSIS
<style color=#00ffffff size=1>.</style>            acme \[ -f varfont \] \[ -F fixfont \] \[ file ... \]

DESCRIPTION
<style color=#00ffffff size=1>.</style>            The text window system <action name=acme(1)>acme(1)</action> serves a variety of files for
<style color=#00ffffff size=1>.</style>            reading, writing, and controlling windows. Some of them are
<style color=#00ffffff size=1>.</style>            virtual versions of system files for dealing with the
<style color=#00ffffff size=1>.</style>            virtual console\; others control operations of acme itself.
<style color=#00ffffff size=1>.</style>            When a command is run under acme, a directory holding these
<style color=#00ffffff size=1>.</style>            files is mounted on /mnt/acme (also bound to /chan) and also
<style color=#00ffffff size=1>.</style>            /dev/acme\; the files mentioned here appear in both these
<style color=#00ffffff size=1>.</style>            directories.

<style color=#00ffffff size=1>.</style>            Some of these files supply virtual versions of services
<style color=#00ffffff size=1>.</style>            available from the underlying environment, in particular the
<style color=#00ffffff size=1>.</style>            character terminal files <action name=cons(3)>cons(3)</action>. Other files are unique to
<style color=#00ffffff size=1>.</style>            acme.

<style color=#00ffffff size=1>.</style>            acme is a subdirectory used by win (see <action name=acme(1)>acme(1)</action>) as a mount
<style color=#00ffffff size=1>.</style>                 point for the acme files associated with the window in
<style color=#00ffffff size=1>.</style>                 which win is running. It has no specific function under
<style color=#00ffffff size=1>.</style>                 acme itself.

<style color=#00ffffff size=1>.</style>            cons is the standard and diagnostic output file for all
<style color=#00ffffff size=1>.</style>                 commands run under acme. (Input for commands is
<style color=#00ffffff size=1>.</style>                 redirected to /dev/null.) Text written to cons appears
<style color=#00ffffff size=1>.</style>                 in a window labelled dir/+Errors, where dir is the
<style color=#00ffffff size=1>.</style>                 directory in which the command was run. The window is
<style color=#00ffffff size=1>.</style>                 created if necessary, but not until text is actually
<style color=#00ffffff size=1>.</style>                 written.

<style color=#00ffffff size=1>.</style>            consctl
<style color=#00ffffff size=1>.</style>                 Is an empty unwritable file present only for
<style color=#00ffffff size=1>.</style>                 compatibility.

<style color=#00ffffff size=1>.</style>            index
<style color=#00ffffff size=1>.</style>                 holds a sequence of lines of text, one per window.
<style color=#00ffffff size=1>.</style>                 Each line has 5 decimal numbers, each formatted in 11
<style color=#00ffffff size=1>.</style>                 characters plus a blank—the window ID\; number of
<style color=#00ffffff size=1>.</style>                 characters (runes) in the tag\; number of characters in
<style color=#00ffffff size=1>.</style>                 the body\; a 1 if the window is a directory, 0
<style color=#00ffffff size=1>.</style>                 otherwise\; and a 1 if the window is modified, 0
<style color=#00ffffff size=1>.</style>                 otherwise—followed by the tag up to a newline if
<style color=#00ffffff size=1>.</style>                 present. Thus at character position 5×12 starts the
<style color=#00ffffff size=1>.</style>                 name of the window. If a file has multiple zeroxed
<style color=#00ffffff size=1>.</style>                 windows open, only the most recently used will appear
<style color=#00ffffff size=1>.</style>                 in the index file.

<style color=#00ffffff size=1>.</style>            label
<style color=#00ffffff size=1>.</style>                 is an empty file, writable without effect, present only
<style color=#00ffffff size=1>.</style>                 for compatibility.

<style color=#00ffffff size=1>.</style>            new  A directory analogous to the numbered directories (q.v.
<style color=#00ffffff size=1>.</style>                 ). Accessing any file in new creates a new window.
<style color=#00ffffff size=1>.</style>                 Thus to cause text to appear in a new window, write it
<style color=#00ffffff size=1>.</style>                 to /dev/new/body. For more control, open /dev/new/ctl
<style color=#00ffffff size=1>.</style>                 and use the interface described below.

<style color=#00ffffff size=1>.</style>            Each acme window has associated a directory numbered by its
<style color=#00ffffff size=1>.</style>            ID. Window IDs are chosen sequentially and may be discovered
<style color=#00ffffff size=1>.</style>            by the ID command, by reading the ctl file, or indirectly
<style color=#00ffffff size=1>.</style>            through the index file.  The files in the numbered
<style color=#00ffffff size=1>.</style>            directories are as follows.

<style color=#00ffffff size=1>.</style>            addr may be written with any textual address (line number,
<style color=#00ffffff size=1>.</style>                 regular expression, etc.), in the format understood by
<style color=#00ffffff size=1>.</style>                 button 3 but without the initial colon, including
<style color=#00ffffff size=1>.</style>                 compound addresses, to set the address for text
<style color=#00ffffff size=1>.</style>                 accessed through the data file. When read, it returns
<style color=#00ffffff size=1>.</style>                 the value of the address that would next be read or
<style color=#00ffffff size=1>.</style>                 written through the data file, in the format #m,#n
<style color=#00ffffff size=1>.</style>                 where m and n are character (not byte) offsets.  If m
<style color=#00ffffff size=1>.</style>                 and n are identical, the format is just #m. Thus a
<style color=#00ffffff size=1>.</style>                 regular expression may be evaluated by writing it to
<style color=#00ffffff size=1>.</style>                 addr and reading it back. The addr address has no
<style color=#00ffffff size=1>.</style>                 effect on the user's selection of text.

<style color=#00ffffff size=1>.</style>            body holds contents of the window body.  It may be read at
<style color=#00ffffff size=1>.</style>                 any byte offset. Text written to body is always
<style color=#00ffffff size=1>.</style>                 appended\; the file offset is ignored.

<style color=#00ffffff size=1>.</style>            ctl  may be read to recover the five numbers as held in the
<style color=#00ffffff size=1>.</style>                 index file, described above, plus three more fields:
<style color=#00ffffff size=1>.</style>                 the width of the window in pixels, the name of the font
<style color=#00ffffff size=1>.</style>                 used in the window, and the width of a tab character in
<style color=#00ffffff size=1>.</style>                 pixels. Text messages may be written to ctl to affect
<style color=#00ffffff size=1>.</style>                 the window. Each message is terminated by a newline and
<style color=#00ffffff size=1>.</style>                 multiple messages may be sent in a single write.
<style color=#00ffffff size=1>.</style>             addr=dot            Set the addr address to that of the
<style color=#00ffffff size=1>.</style>                                 user's selected text in the window.
<style color=#00ffffff size=1>.</style>             clean               Mark the window clean as though it has
<style color=#00ffffff size=1>.</style>                                 just been written.
<style color=#00ffffff size=1>.</style>             cleartag            Remove all text in the tag after the
<style color=#00ffffff size=1>.</style>                                 vertical bar.
<style color=#00ffffff size=1>.</style>             del                 Equivalent to the Del interactive
<style color=#00ffffff size=1>.</style>                                 command.
<style color=#00ffffff size=1>.</style>             delete              Equivalent to the Delete interactive
<style color=#00ffffff size=1>.</style>                                 command.
<style color=#00ffffff size=1>.</style>             dot=addr            Set the user's selected text in the
<style color=#00ffffff size=1>.</style>                                 window to the text addressed by the
<style color=#00ffffff size=1>.</style>                                 addr address.
<style color=#00ffffff size=1>.</style>             dump command        Set the command string to recreate the
<style color=#00ffffff size=1>.</style>                                 window from a dump file.
<style color=#00ffffff size=1>.</style>             dumpdir directory   Set the directory in which to run the
<style color=#00ffffff size=1>.</style>                                 command to recreate the window from a
<style color=#00ffffff size=1>.</style>                                 dump file.
<style color=#00ffffff size=1>.</style>             get                 Equivalent to the Get interactive
<style color=#00ffffff size=1>.</style>                                 command with no arguments\; accepts no
<style color=#00ffffff size=1>.</style>                                 arguments.
<style color=#00ffffff size=1>.</style>             limit=addr          When the ctl file is first opened,
<style color=#00ffffff size=1>.</style>                                 regular expression context searches in
<style color=#00ffffff size=1>.</style>                                 addr addresses examine the whole file\;
<style color=#00ffffff size=1>.</style>                                 this message restricts subsequent
<style color=#00ffffff size=1>.</style>                                 searches to the current addr address.
<style color=#00ffffff size=1>.</style>             mark                Cancel nomark, returning the window to
<style color=#00ffffff size=1>.</style>                                 the usual state wherein each
<style color=#00ffffff size=1>.</style>                                 modification to the body must be undone
<style color=#00ffffff size=1>.</style>                                 individually.
<style color=#00ffffff size=1>.</style>             name name           Set the name of the window to name.
<style color=#00ffffff size=1>.</style>             nomark              Turn off automatic `marking' of
<style color=#00ffffff size=1>.</style>                                 changes, so a set of related changes
<style color=#00ffffff size=1>.</style>                                 may be undone in a single Undo
<style color=#00ffffff size=1>.</style>                                 interactive command.
<style color=#00ffffff size=1>.</style>             noscroll            Turn off automatic `scrolling' of the
<style color=#00ffffff size=1>.</style>                                 window to show text written to the
<style color=#00ffffff size=1>.</style>                                 body.
<style color=#00ffffff size=1>.</style>             put                 Equivalent to the Put interactive
<style color=#00ffffff size=1>.</style>                                 command with no arguments\; accepts no
<style color=#00ffffff size=1>.</style>                                 arguments.
<style color=#00ffffff size=1>.</style>             scroll              Cancel a noscroll message, returning
<style color=#00ffffff size=1>.</style>                                 the window to the default state wherein
<style color=#00ffffff size=1>.</style>                                 each write to the body file causes the
<style color=#00ffffff size=1>.</style>                                 window to `scroll' to display the new
<style color=#00ffffff size=1>.</style>                                 text.
<style color=#00ffffff size=1>.</style>             show                Guarantee at least some of the selected
<style color=#00ffffff size=1>.</style>                                 text is visible on the display.
<style color=#00ffffff size=1>.</style>             noecho              Stop echoing characters sent to the
<style color=#00ffffff size=1>.</style>                                 window but indicate their presence by
<style color=#00ffffff size=1>.</style>                                 printing an asterisk.
<style color=#00ffffff size=1>.</style>             echo                Turns noecho off.

<style color=#00ffffff size=1>.</style>            data is used in conjunction with addr for random access to
<style color=#00ffffff size=1>.</style>                 the contents of the body. The file offset is ignored
<style color=#00ffffff size=1>.</style>                 when writing the body file, but the character (not
<style color=#00ffffff size=1>.</style>                 byte) offset may be set with addr and then read from
<style color=#00ffffff size=1>.</style>                 the data file. Text, which must contain only whole
<style color=#00ffffff size=1>.</style>                 characters (no `partial runes'), written to data
<style color=#00ffffff size=1>.</style>                 replaces the characters addressed by the addr file and
<style color=#00ffffff size=1>.</style>                 sets the address to the null string at the end of the
<style color=#00ffffff size=1>.</style>                 written text. A read from data returns as many whole
<style color=#00ffffff size=1>.</style>                 characters as the read count will permit starting at
<style color=#00ffffff size=1>.</style>                 the beginning of the addr address (the end of the
<style color=#00ffffff size=1>.</style>                 address has no effect) and sets the address to the null
<style color=#00ffffff size=1>.</style>                 string at the end of the returned characters.

<style color=#00ffffff size=1>.</style>            event
<style color=#00ffffff size=1>.</style>                 When a window's event file is open, changes to the
<style color=#00ffffff size=1>.</style>                 window occur as always but the actions are also
<style color=#00ffffff size=1>.</style>                 reported as messages to the reader of the file.  Also,
<style color=#00ffffff size=1>.</style>                 user actions with buttons 2 and 3 (other than chorded
<style color=#00ffffff size=1>.</style>                 Cut and Paste, which behave normally) have no immediate
<style color=#00ffffff size=1>.</style>                 effect on the window\; it is expected that the program
<style color=#00ffffff size=1>.</style>                 reading the event file will interpret them. The
<style color=#00ffffff size=1>.</style>                 messages have a fixed format: a character indicating
<style color=#00ffffff size=1>.</style>                 the origin or cause of the action, a character
<style color=#00ffffff size=1>.</style>                 indicating the type of the action, four free-format
<style color=#00ffffff size=1>.</style>                 blank-terminated decimal numbers, optional text, and a
<style color=#00ffffff size=1>.</style>                 newline. The first and second numbers are the character
<style color=#00ffffff size=1>.</style>                 addresses of the action, the third is a flag, and the
<style color=#00ffffff size=1>.</style>                 final is a count of the characters in the optional
<style color=#00ffffff size=1>.</style>                 text, which may itself contain newlines. The origin
<style color=#00ffffff size=1>.</style>                 characters are E for writes to the body or tag file, F
<style color=#00ffffff size=1>.</style>                 for actions through the window's other files, K for the
<style color=#00ffffff size=1>.</style>                 keyboard, and M for the mouse. The type characters are
<style color=#00ffffff size=1>.</style>                 D for text deleted from the body, d for text deleted
<style color=#00ffffff size=1>.</style>                 from the tag, I for text inserted to the body, i for
<style color=#00ffffff size=1>.</style>                 text inserted to the tag, L for a button 3 action in
<style color=#00ffffff size=1>.</style>                 the body, l for a button 3 action in the tag, X for a
<style color=#00ffffff size=1>.</style>                 button 2 action in the body, and x for a button 2
<style color=#00ffffff size=1>.</style>                 action in the tag.

<style color=#00ffffff size=1>.</style>                 If the relevant text has less than 256 characters, it
<style color=#00ffffff size=1>.</style>                 is included in the message\; otherwise it is elided, the
<style color=#00ffffff size=1>.</style>                 fourth number is 0, and the program must read it from
<style color=#00ffffff size=1>.</style>                 the data file if needed.  No text is sent on a D or d
<style color=#00ffffff size=1>.</style>                 message.

<style color=#00ffffff size=1>.</style>                 For D, d, I, and i the flag is always zero. For X and x
<style color=#00ffffff size=1>.</style>                 , the flag is a bitwise OR (reported decimally) of the
<style color=#00ffffff size=1>.</style>                 following: 1 if the text indicated is recognized as an
<style color=#00ffffff size=1>.</style>                 acme built-in command\; 2 if the text indicated is a
<style color=#00ffffff size=1>.</style>                 null string that has a non-null expansion\; if so,
<style color=#00ffffff size=1>.</style>                 another complete message will follow describing the
<style color=#00ffffff size=1>.</style>                 expansion exactly as if it had been indicated
<style color=#00ffffff size=1>.</style>                 explicitly (its flag will always be 0)\; 8 if the
<style color=#00ffffff size=1>.</style>                 command has an extra (chorded) argument\; if so, two
<style color=#00ffffff size=1>.</style>                 more complete messages will follow reporting the
<style color=#00ffffff size=1>.</style>                 argument (with all numbers 0 except the character
<style color=#00ffffff size=1>.</style>                 count) and where it originated, in the form of a
<style color=#00ffffff size=1>.</style>                 fully-qualified button 3 style address.

<style color=#00ffffff size=1>.</style>                 For L and l, the flag is the bitwise OR of the
<style color=#00ffffff size=1>.</style>                 following: 1 if acme can interpret the action without
<style color=#00ffffff size=1>.</style>                 loading a new file\; 2 if a second (post-expansion)
<style color=#00ffffff size=1>.</style>                 message follows, analogous to that with X messages\; 4
<style color=#00ffffff size=1>.</style>                 if the text is a file or window name (perhaps with
<style color=#00ffffff size=1>.</style>                 address) rather than plain literal text.

<style color=#00ffffff size=1>.</style>                 For messages with the 1 bit on in the flag, writing the
<style color=#00ffffff size=1>.</style>                 message back to the event file, but with the flag,
<style color=#00ffffff size=1>.</style>                 count, and text omitted, will cause the action to be
<style color=#00ffffff size=1>.</style>                 applied to the file exactly as it would have been if
<style color=#00ffffff size=1>.</style>                 the event file had not been open.

<style color=#00ffffff size=1>.</style>            tag  holds contents of the window tag.  It may be read at
<style color=#00ffffff size=1>.</style>                 any byte offset. Text written to tag is always
<style color=#00ffffff size=1>.</style>                 appended\; the file offset is ignored.

SOURCE
<style color=#00ffffff size=1>.</style>            /appl/acme
<style color=#00ffffff size=1>.</style>            /appl/acme/acme

SEE ALSO
<style color=#00ffffff size=1>.</style>            <action name=acme(1)>acme(1)</action>, <action name=cons(3)>cons(3)</action>

<style color=#00ffffff size=1>.</style>                                Inferno Manual
