<action name=SECURITY-LOGIN(2)>SECURITY-LOGIN(2)</action>                               <action name=SECURITY-LOGIN(2)>SECURITY-LOGIN(2)</action>

NAME
<style color=#00ffffff size=1>.</style>            login - verify credentials

SYNOPSIS
<style color=#00ffffff size=1>.</style>            include "keyring.m"\;
<style color=#00ffffff size=1>.</style>            include "security.m"\;
<style color=#00ffffff size=1>.</style>            login := load Login Login->PATH\;

<style color=#00ffffff size=1>.</style>            login: fn(name, password, addr: string):
<style color=#00ffffff size=1>.</style>            	(string, ref Keyring->Authinfo)\;

DESCRIPTION
<style color=#00ffffff size=1>.</style>            The Login module is provided for use by a client of a
<style color=#00ffffff size=1>.</style>            certifying authority (CA) or `signer'. The login function
<style color=#00ffffff size=1>.</style>            communicates with a certifying authority (CA) in order to
<style color=#00ffffff size=1>.</style>            create a Keyring->Authinfo adt which contains a
<style color=#00ffffff size=1>.</style>            public/private key pair and a certificate signed by the CA
<style color=#00ffffff size=1>.</style>            (see <action name=keyring-intro(2)>keyring-intro(2)</action>). The public/private key pair is
<style color=#00ffffff size=1>.</style>            generated by login using the same parameters as those in the
<style color=#00ffffff size=1>.</style>            signer's key (eg, algorithm and key length)\; see
<style color=#00ffffff size=1>.</style>            <action name=keyring-gensk(2)>keyring-gensk(2)</action>. The procedure assumes a secret, i.e. a
<style color=#00ffffff size=1>.</style>            password, has already been established between the user and
<style color=#00ffffff size=1>.</style>            the CA. See <action name=changelogin(8)>changelogin(8)</action> and <action name=keyfs(4)>keyfs(4)</action> for how this
<style color=#00ffffff size=1>.</style>            password is managed at the CA.

<style color=#00ffffff size=1>.</style>            Login connects, using <action name=dial(2)>dial(2)</action>, to the signer at network
<style color=#00ffffff size=1>.</style>            address addr, which is any form accepted by <action name=cs(8)>cs(8)</action>, including
<style color=#00ffffff size=1>.</style>            the special address $SIGNER, which cs will translate to the
<style color=#00ffffff size=1>.</style>            client's default signer (if there is one). Normally the
<style color=#00ffffff size=1>.</style>            incoming call will be given to <action name=logind(8)>logind(8)</action> by <action name=svc(8)>svc(8)</action>.

<style color=#00ffffff size=1>.</style>            Login sends the user name and password, using the protocol
<style color=#00ffffff size=1>.</style>            described in <action name=login(6)>login(6)</action>, to justify the server's issuing a
<style color=#00ffffff size=1>.</style>            certificate, which is returned in a Keyring->Authinfo adt on
<style color=#00ffffff size=1>.</style>            success. The certificate can if desired be stored by
<style color=#00ffffff size=1>.</style>            Keyring->writeauthinfo\; see <action name=keyring-auth(2)>keyring-auth(2)</action>. The password is
<style color=#00ffffff size=1>.</style>            used by the encrypted key exchange protocol to establish a
<style color=#00ffffff size=1>.</style>            secure channel between user and CA.

SOURCE
<style color=#00ffffff size=1>.</style>            /appl/lib/login.b

SEE ALSO
<style color=#00ffffff size=1>.</style>            <action name=getauthinfo(8)>getauthinfo(8)</action>, <action name=keyring-auth(2)>keyring-auth(2)</action>, <action name=login(6)>login(6)</action>, createsignerkey
<style color=#00ffffff size=1>.</style>            (8), <action name=logind(8)>logind(8)</action>

DIAGNOSTICS
<style color=#00ffffff size=1>.</style>            Login returns nil in the string component on success and a
<style color=#00ffffff size=1>.</style>            diagnostic string on error (with a nil Keyring->Authinfo
<style color=#00ffffff size=1>.</style>            reference).

<style color=#00ffffff size=1>.</style>                                Inferno Manual
