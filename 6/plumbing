<action name=PLUMBING(6)>PLUMBING(6)</action>                                           <action name=PLUMBING(6)>PLUMBING(6)</action>

NAME
<style color=#00ffffff size=1>.</style>            plumbing - plumbing rules

DESCRIPTION
<style color=#00ffffff size=1>.</style>            Plumbing rules tell <action name=plumber(8)>plumber(8)</action> how to route plumbing
<style color=#00ffffff size=1>.</style>            messages generated by applications using <action name=plumbmsg(2)>plumbmsg(2)</action>.

<style color=#00ffffff size=1>.</style>            The file is a set of rules separated by blank lines. Each
<style color=#00ffffff size=1>.</style>            rule is a set of patterns followed by a set of actions. The
<style color=#00ffffff size=1>.</style>            rules are interpreted in order. The first rule whose
<style color=#00ffffff size=1>.</style>            patterns all match is applied, and no further rules are
<style color=#00ffffff size=1>.</style>            examined. Comments start with # and continue to end of line.
<style color=#00ffffff size=1>.</style>            Single quotes protect special characters (use '' to get a
<style color=#00ffffff size=1>.</style>            single quote).

<style color=#00ffffff size=1>.</style>            A pattern has the general form:

<style color=#00ffffff size=1>.</style>                 field verb arg

<style color=#00ffffff size=1>.</style>            Each field corresponds to a field in the incoming plumbing
<style color=#00ffffff size=1>.</style>            message:

<style color=#00ffffff size=1>.</style>            src  Source application

<style color=#00ffffff size=1>.</style>            dst  Destination port

<style color=#00ffffff size=1>.</style>            dir  Working directory

<style color=#00ffffff size=1>.</style>            kind Format of the data (eg, text or image)

<style color=#00ffffff size=1>.</style>            attr A line of name=value pairs

<style color=#00ffffff size=1>.</style>            data The message data (an array of bytes)

<style color=#00ffffff size=1>.</style>            The verbs are:

<style color=#00ffffff size=1>.</style>            is       Exact string comparison with arg

<style color=#00ffffff size=1>.</style>            matches  Regular expression comparison with arg

<style color=#00ffffff size=1>.</style>            isdir    Arg must name an existing directory

<style color=#00ffffff size=1>.</style>            isfile   Arg must name an existing file

<style color=#00ffffff size=1>.</style>            set      Set the value of the field to arg. This verb
<style color=#00ffffff size=1>.</style>                     operates in place, so put it after all other
<style color=#00ffffff size=1>.</style>                     patterns in the rule.

<style color=#00ffffff size=1>.</style>            The arg can refer to one of the following variables:

<style color=#00ffffff size=1>.</style>            $0 to $9   Substrings resulting from the most recent regular
<style color=#00ffffff size=1>.</style>                       expression match: $0 is the entire substring\; $1
<style color=#00ffffff size=1>.</style>                       the first parenthesised substring, etc.

<style color=#00ffffff size=1>.</style>            $file      The file name examined by the last isfile verb.

<style color=#00ffffff size=1>.</style>            $dir       The directory name examined by the last isdir
<style color=#00ffffff size=1>.</style>                       verb.

<style color=#00ffffff size=1>.</style>            The following actions are provided:

<style color=#00ffffff size=1>.</style>            plumb to port
<style color=#00ffffff size=1>.</style>                 Route the message to the given plumbing port.

<style color=#00ffffff size=1>.</style>            plumb start command arg ...
<style color=#00ffffff size=1>.</style>                 If no program is currently listening on the current
<style color=#00ffffff size=1>.</style>                 rule's port, start the command with the given
<style color=#00ffffff size=1>.</style>                 arguments. The `$' variables listed above can be used,
<style color=#00ffffff size=1>.</style>                 to include part of the message in the command line
<style color=#00ffffff size=1>.</style>                 arguments to the program. They are replaced in the
<style color=#00ffffff size=1>.</style>                 command string by their actual values.

<style color=#00ffffff size=1>.</style>            For example, the following rule sends the names of module
<style color=#00ffffff size=1>.</style>            files- file names ending with suffix `.m'- to <action name=wm-brutus(1)>wm-brutus(1)</action>,
<style color=#00ffffff size=1>.</style>            starting it if it is not already running:

<style color=#00ffffff size=1>.</style>                 kind is text
<style color=#00ffffff size=1>.</style>                 data matches '(\[a-zA-Z0-9\]+.m)(:\[0-9\]+)?'
<style color=#00ffffff size=1>.</style>                 data isfile     /module/$1
<style color=#00ffffff size=1>.</style>                 data set        /module/$0
<style color=#00ffffff size=1>.</style>                 plumb to edit
<style color=#00ffffff size=1>.</style>                 plumb start /dis/wm/brutus.dis $file$2

<style color=#00ffffff size=1>.</style>            Note the use of $2 in the start action to pass brutus the
<style color=#00ffffff size=1>.</style>            line number selected by the second parenthesised expression
<style color=#00ffffff size=1>.</style>            in the pattern.

FILES
<style color=#00ffffff size=1>.</style>            /usr/user/lib/plumbing

SEE ALSO
<style color=#00ffffff size=1>.</style>            <action name=plumb(1)>plumb(1)</action>, <action name=plumbmsg(2)>plumbmsg(2)</action>, <action name=plumber(8)>plumber(8)</action>

<style color=#00ffffff size=1>.</style>                                Inferno Manual
