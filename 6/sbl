<action name=SBL(6)>SBL(6)</action>                                                     <action name=SBL(6)>SBL(6)</action>

NAME
<style color=#00ffffff size=1>.</style>            sbl - symbol table file

DESCRIPTION
<style color=#00ffffff size=1>.</style>            A Limbo symbol table file provides type information for the
<style color=#00ffffff size=1>.</style>            module in an associated Dis executable file, for use by
<style color=#00ffffff size=1>.</style>            debuggers and similar applications. They are written by the
<style color=#00ffffff size=1>.</style>            Limbo compiler when given the -g option. The files
<style color=#00ffffff size=1>.</style>            conventionally have a .sbl suffix\; they need not be stored
<style color=#00ffffff size=1>.</style>            in the same directory as the corresponding Dis file.

<style color=#00ffffff size=1>.</style>            The file consists of a header followed by five tables:

<style color=#00ffffff size=1>.</style>                 header file-table pc-table type-table fn-table
<style color=#00ffffff size=1>.</style>                 data-table

<style color=#00ffffff size=1>.</style>            Each table starts with a line containing a decimal count of
<style color=#00ffffff size=1>.</style>            the items in that table. The count can be zero. The
<style color=#00ffffff size=1>.</style>            following sections describe the format of table items in
<style color=#00ffffff size=1>.</style>            each table. In the description, the following terminals are
<style color=#00ffffff size=1>.</style>            used.

<style color=#00ffffff size=1>.</style>            A string is a sequence of letters, digits, and the
<style color=#00ffffff size=1>.</style>            characters _, ., -, and >. Letters are the Unicode
<style color=#00ffffff size=1>.</style>            characters a through z and A through Z, and all Unicode
<style color=#00ffffff size=1>.</style>            characters with encoded values greater than A0 hexadecimal.

<style color=#00ffffff size=1>.</style>            An int is an optional minus sign followed by a sequence of
<style color=#00ffffff size=1>.</style>            digits, 0 to 9.

<style color=#00ffffff size=1>.</style>            In the following description, the presence of a space is
<style color=#00ffffff size=1>.</style>            represented by • and a newline by \n. There are no other
<style color=#00ffffff size=1>.</style>            spaces between syntactic elements in the file format. Other
<style color=#00ffffff size=1>.</style>            special characters represent themselves.

<style color=#00ffffff size=1>.</style>         Header
<style color=#00ffffff size=1>.</style>            The header consists of two items.

<style color=#00ffffff size=1>.</style>                 header:
<style color=#00ffffff size=1>.</style>                 	magic\n
<style color=#00ffffff size=1>.</style>                 	module\n
<style color=#00ffffff size=1>.</style>                 magic:
<style color=#00ffffff size=1>.</style>                 	limbo .sbl 2.0
<style color=#00ffffff size=1>.</style>                 module:
<style color=#00ffffff size=1>.</style>                 	string

<style color=#00ffffff size=1>.</style>            There have been two previous versions of symbol table
<style color=#00ffffff size=1>.</style>            format, distinguished by the number in magic. Version 1. was
<style color=#00ffffff size=1>.</style>            the original\; version 1.1 added more references back to the
<style color=#00ffffff size=1>.</style>            source\; and version 2.0 replaced the original adt table by a
<style color=#00ffffff size=1>.</style>            type table and added support for Limbo's pick construction.
<style color=#00ffffff size=1>.</style>            Only version 2.0 is described here\; the others are obsolete.

<style color=#00ffffff size=1>.</style>            Module is the name of the module implemented in the Dis
<style color=#00ffffff size=1>.</style>            file. Symbol file references to identifiers declared by the
<style color=#00ffffff size=1>.</style>            implementation module are unqualified. A name referenced
<style color=#00ffffff size=1>.</style>            that is imported from any other module is preceded by m->
<style color=#00ffffff size=1>.</style>            where m is that module's identifier.

<style color=#00ffffff size=1>.</style>         File table
<style color=#00ffffff size=1>.</style>            The file table is a list of file names referenced by the
<style color=#00ffffff size=1>.</style>            rest of the tables. Each file name is terminated by a
<style color=#00ffffff size=1>.</style>            newline character\; within the name, any character other than
<style color=#00ffffff size=1>.</style>            a newline is valid.

<style color=#00ffffff size=1>.</style>         PC table
<style color=#00ffffff size=1>.</style>            The PC table relates every instruction in the Dis file to
<style color=#00ffffff size=1>.</style>            the source from which it was compiled. The table is indexed
<style color=#00ffffff size=1>.</style>            by Dis PC to obtain a reference to the corresponding source.
<style color=#00ffffff size=1>.</style>            Each item consists of a source description and a statement
<style color=#00ffffff size=1>.</style>            reference:

<style color=#00ffffff size=1>.</style>                 pc-item:
<style color=#00ffffff size=1>.</style>                 	src stmt \n
<style color=#00ffffff size=1>.</style>                 src:
<style color=#00ffffff size=1>.</style>                 	pos,pos•
<style color=#00ffffff size=1>.</style>                 pos:
<style color=#00ffffff size=1>.</style>                 	file: line. char
<style color=#00ffffff size=1>.</style>                 file, line, char, stmt:
<style color=#00ffffff size=1>.</style>                 	int

<style color=#00ffffff size=1>.</style>            A source description src selects source text as a range of
<style color=#00ffffff size=1>.</style>            characters within lines of a source file. File is an index
<style color=#00ffffff size=1>.</style>            into the file table (origin 0)\; line and char are positions
<style color=#00ffffff size=1>.</style>            within that source file, with line numbers starting at 1 and
<style color=#00ffffff size=1>.</style>            character positions at 0. If file or line is omitted, it is
<style color=#00ffffff size=1>.</style>            assumed to have the previous value, or 0 if there is no
<style color=#00ffffff size=1>.</style>            previous value.

<style color=#00ffffff size=1>.</style>            Stmt is the `statement number' of the instruction. Despite
<style color=#00ffffff size=1>.</style>            its name, the scope of a statement number is smaller than a
<style color=#00ffffff size=1>.</style>            Limbo statement: it identifies a region marked by the
<style color=#00ffffff size=1>.</style>            compiler for treatment as a unit when debugging. For
<style color=#00ffffff size=1>.</style>            instance, in a for statement, the initial expression,
<style color=#00ffffff size=1>.</style>            increment, test, and body all have unique statement numbers.
<style color=#00ffffff size=1>.</style>            All instructions compiled from the same region in a Limbo
<style color=#00ffffff size=1>.</style>            program have the same statement number. The number is that
<style color=#00ffffff size=1>.</style>            of the innermost region that contains the instruction.

<style color=#00ffffff size=1>.</style>         Type table
<style color=#00ffffff size=1>.</style>            The type table describes the Limbo adts used in the Dis
<style color=#00ffffff size=1>.</style>            file, both locally declared and imported. Each entry
<style color=#00ffffff size=1>.</style>            describes a type:

<style color=#00ffffff size=1>.</style>                 type:
<style color=#00ffffff size=1>.</style>                 	@ type-index \n
<style color=#00ffffff size=1>.</style>                 	a adt-item
<style color=#00ffffff size=1>.</style>                 	p adt-item tag-table
<style color=#00ffffff size=1>.</style>                 	t size . id-table
<style color=#00ffffff size=1>.</style>                 	m module \n src
<style color=#00ffffff size=1>.</style>                 	A type
<style color=#00ffffff size=1>.</style>                 	C type
<style color=#00ffffff size=1>.</style>                 	F fn-name type
<style color=#00ffffff size=1>.</style>                 	L type
<style color=#00ffffff size=1>.</style>                 	R type
<style color=#00ffffff size=1>.</style>                 	n
<style color=#00ffffff size=1>.</style>                 	N
<style color=#00ffffff size=1>.</style>                 	B
<style color=#00ffffff size=1>.</style>                 	b
<style color=#00ffffff size=1>.</style>                 	i
<style color=#00ffffff size=1>.</style>                 	f
<style color=#00ffffff size=1>.</style>                 	s
<style color=#00ffffff size=1>.</style>                 type-index:
<style color=#00ffffff size=1>.</style>                 	int

<style color=#00ffffff size=1>.</style>            Each leading character specifies a different Limbo type:

<style color=#00ffffff size=1>.</style>                 @    existing type referenced by type table index (not
<style color=#00ffffff size=1>.</style>                      self-referential)
<style color=#00ffffff size=1>.</style>                 A    array of type
<style color=#00ffffff size=1>.</style>                 a    adt without pick
<style color=#00ffffff size=1>.</style>                 B    big
<style color=#00ffffff size=1>.</style>                 b    byte
<style color=#00ffffff size=1>.</style>                      C chan of type
<style color=#00ffffff size=1>.</style>                      F fn returning type
<style color=#00ffffff size=1>.</style>                 f    real
<style color=#00ffffff size=1>.</style>                 i    int
<style color=#00ffffff size=1>.</style>                 L    list of type
<style color=#00ffffff size=1>.</style>                 m    module
<style color=#00ffffff size=1>.</style>                 N    nil's type
<style color=#00ffffff size=1>.</style>                 n    no type (eg, function with no return type)
<style color=#00ffffff size=1>.</style>                 p    adt with pick
<style color=#00ffffff size=1>.</style>                 R    ref type
<style color=#00ffffff size=1>.</style>                 s    string
<style color=#00ffffff size=1>.</style>                 t    tuple

<style color=#00ffffff size=1>.</style>            A type-index is an offset in the type table, representing
<style color=#00ffffff size=1>.</style>            the corresponding type. Size is the size in bytes of a value
<style color=#00ffffff size=1>.</style>            of the given type. The size of basic types is known and does
<style color=#00ffffff size=1>.</style>            not appear explicitly: big and real are 64 bits\; all others
<style color=#00ffffff size=1>.</style>            including strings and reference types are 4 bytes. (Strings
<style color=#00ffffff size=1>.</style>            are represented internally by a pointer.)

<style color=#00ffffff size=1>.</style>            Each id-table is preceded by a count of the number of
<style color=#00ffffff size=1>.</style>            entries, followed by an id-item for each entry in the table:

<style color=#00ffffff size=1>.</style>                 id-table:
<style color=#00ffffff size=1>.</style>                 	count \n id-items
<style color=#00ffffff size=1>.</style>                 id-item:
<style color=#00ffffff size=1>.</style>                 	id-offset : id-name : src type \n
<style color=#00ffffff size=1>.</style>                 id-offset:
<style color=#00ffffff size=1>.</style>                 	int
<style color=#00ffffff size=1>.</style>                 id-name:
<style color=#00ffffff size=1>.</style>                 	string
<style color=#00ffffff size=1>.</style>                 count:
<style color=#00ffffff size=1>.</style>                 	int

<style color=#00ffffff size=1>.</style>            Id-offset is the number of bytes from the start of the
<style color=#00ffffff size=1>.</style>            enclosing object to the value of the object identified by
<style color=#00ffffff size=1>.</style>            id-name.

<style color=#00ffffff size=1>.</style>            An adt without a pick clause is described using an adt-item:

<style color=#00ffffff size=1>.</style>                 adt-item:
<style color=#00ffffff size=1>.</style>                 	adt-name • src size \n id-table
<style color=#00ffffff size=1>.</style>                 adt-name:
<style color=#00ffffff size=1>.</style>                 	string
<style color=#00ffffff size=1>.</style>                 size:
<style color=#00ffffff size=1>.</style>                 	int

<style color=#00ffffff size=1>.</style>            The id-table has an entry for every data element of adt-name
<style color=#00ffffff size=1>.</style>            .

<style color=#00ffffff size=1>.</style>            If an adt has a pick clause, the adt's type table entry uses
<style color=#00ffffff size=1>.</style>            the p type character. The invariant part of the adt is
<style color=#00ffffff size=1>.</style>            described by an adt-item (with zero size) and the variant
<style color=#00ffffff size=1>.</style>            clause is described by a tag-table of the following form:

<style color=#00ffffff size=1>.</style>                 tag-table:
<style color=#00ffffff size=1>.</style>                 	count \n tag-items
<style color=#00ffffff size=1>.</style>                 tag-item:
<style color=#00ffffff size=1>.</style>                 	name : src size \n id-table
<style color=#00ffffff size=1>.</style>                   |	name : src \n

<style color=#00ffffff size=1>.</style>            The tag-table describes the variants of a Limbo adt that
<style color=#00ffffff size=1>.</style>            includes a pick clause. The name is the pick tag for the
<style color=#00ffffff size=1>.</style>            associated alternative. If the size and id-table are
<style color=#00ffffff size=1>.</style>            missing, the given variant has the same description as the
<style color=#00ffffff size=1>.</style>            previous one.

<style color=#00ffffff size=1>.</style>            A tuple's id-table contains id-names of the form tn, where n
<style color=#00ffffff size=1>.</style>            is the 0-origin index of the item in the tuple.

<style color=#00ffffff size=1>.</style>            Src is as previously defined above in the PC table section.

<style color=#00ffffff size=1>.</style>         Fn table
<style color=#00ffffff size=1>.</style>            The function table describes each function implemented by
<style color=#00ffffff size=1>.</style>            the Dis file.

<style color=#00ffffff size=1>.</style>                 fn-item:
<style color=#00ffffff size=1>.</style>                 	fn-pc : fn-name \n args locals return
<style color=#00ffffff size=1>.</style>                 fn-pc:
<style color=#00ffffff size=1>.</style>                 	int
<style color=#00ffffff size=1>.</style>                 fn-name:
<style color=#00ffffff size=1>.</style>                 	string
<style color=#00ffffff size=1>.</style>                 args, locals:
<style color=#00ffffff size=1>.</style>                 	id-table
<style color=#00ffffff size=1>.</style>                 return:
<style color=#00ffffff size=1>.</style>                 	type

<style color=#00ffffff size=1>.</style>            Fn-pc is the starting pc for the Dis instructions for
<style color=#00ffffff size=1>.</style>            fn-name. If the function is a member of an adt, the member
<style color=#00ffffff size=1>.</style>            name is qualified by the adt name, so that fn-name has the
<style color=#00ffffff size=1>.</style>            form `adt-name.member-name'. Within the id-tables for args
<style color=#00ffffff size=1>.</style>            and locals, the id-offset fields give offsets relative to
<style color=#00ffffff size=1>.</style>            the function's activation frame. Furthermore, no table
<style color=#00ffffff size=1>.</style>            entries are made for args that are declared nil (unused).

<style color=#00ffffff size=1>.</style>         Data table
<style color=#00ffffff size=1>.</style>            The data table describes the global variables in the Dis
<style color=#00ffffff size=1>.</style>            file. It is an id-table, with one entry for each global
<style color=#00ffffff size=1>.</style>            variable.

SEE ALSO
<style color=#00ffffff size=1>.</style>            <action name=limbo(1)>limbo(1)</action>, <action name=wm-deb(1)>wm-deb(1)</action>, <action name=debug(2)>debug(2)</action>, <action name=dis(6)>dis(6)</action>

<style color=#00ffffff size=1>.</style>                                Inferno Manual
