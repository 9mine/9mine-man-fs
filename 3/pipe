<action name=PIPE(3)>PIPE(3)</action>                                                   <action name=PIPE(3)>PIPE(3)</action>

NAME
<style color=#00ffffff size=1>.</style>            pipe - two-way interprocess communication

SYNOPSIS
<style color=#00ffffff size=1>.</style>            bind '#|'dir
<style color=#00ffffff size=1>.</style>            dir/data
<style color=#00ffffff size=1>.</style>            dir/data1

DESCRIPTION
<style color=#00ffffff size=1>.</style>            A pipe provides a mechanism for interprocess I/O by reading
<style color=#00ffffff size=1>.</style>            and writing file descriptors (see <action name=sys-read(2)>sys-read(2)</action>). An attach
<style color=#00ffffff size=1>.</style>            (5), typically via <action name=sys-pipe(2)>sys-pipe(2)</action> or <action name=sys-bind(2)>sys-bind(2)</action>, allocates two
<style color=#00ffffff size=1>.</style>            files that are cross-connected: data written to one can be
<style color=#00ffffff size=1>.</style>            read back from the other, in the same order.

<style color=#00ffffff size=1>.</style>            Write boundaries are preserved: each read terminates when
<style color=#00ffffff size=1>.</style>            the read buffer is full or after reading the last byte of a
<style color=#00ffffff size=1>.</style>            write, whichever comes first. In particular, a write of zero
<style color=#00ffffff size=1>.</style>            bytes will result in a zero-length read, which is usually
<style color=#00ffffff size=1>.</style>            interpreted by readers as end-of-file, but could be used to
<style color=#00ffffff size=1>.</style>            delimit the data stream for other purposes.

<style color=#00ffffff size=1>.</style>            Written data is buffered by the kernel and stored on
<style color=#00ffffff size=1>.</style>            internal queues (see qio(10.2)). The maximum block size is
<style color=#00ffffff size=1>.</style>            128k bytes\; larger writes will be split across several
<style color=#00ffffff size=1>.</style>            blocks, which are queued separately. Each read will return
<style color=#00ffffff size=1>.</style>            data from at most one block. Concurrent writers are
<style color=#00ffffff size=1>.</style>            therefore guaranteed that their data will not be interleaved
<style color=#00ffffff size=1>.</style>            with data from other writers (ie, will be written
<style color=#00ffffff size=1>.</style>            atomically) only when each write is less than the maximum
<style color=#00ffffff size=1>.</style>            buffer size. Writers to pipe interfaces on remotely mounted
<style color=#00ffffff size=1>.</style>            portions of the namespace have their guarantee of atomicity
<style color=#00ffffff size=1>.</style>            lowered to Sys->ATOMICIO bytes by <action name=mnt(3)>mnt(3)</action>.

<style color=#00ffffff size=1>.</style>            The system mediates between producer and consumer. Writers
<style color=#00ffffff size=1>.</style>            will block when buffered data reaches a high-water mark,
<style color=#00ffffff size=1>.</style>            currently 32k bytes, until a reader has reduced it by half.
<style color=#00ffffff size=1>.</style>            The length returned by <action name=sys-stat(2)>sys-stat(2)</action> on each name gives the
<style color=#00ffffff size=1>.</style>            number of bytes waiting to be read on the corresponding end
<style color=#00ffffff size=1>.</style>            of the pipe.

<style color=#00ffffff size=1>.</style>            When all file descriptors on one side of the pipe have been
<style color=#00ffffff size=1>.</style>            closed, and after any remaining data has been read, a reader
<style color=#00ffffff size=1>.</style>            on the other side sees end-of-file (count of zero) on a
<style color=#00ffffff size=1>.</style>            subsequent read. Once both ends are closed, the pipe can be
<style color=#00ffffff size=1>.</style>            reused.

<style color=#00ffffff size=1>.</style>            A pipe persists until it is unmounted and no processes have
<style color=#00ffffff size=1>.</style>            either end open.

SOURCE
<style color=#00ffffff size=1>.</style>            /emu/port/devpipe.c
<style color=#00ffffff size=1>.</style>            /os/port/devpipe.c

SEE ALSO
<style color=#00ffffff size=1>.</style>            <action name=sys-file2chan(2)>sys-file2chan(2)</action>, <action name=sys-pipe(2)>sys-pipe(2)</action>

DIAGNOSTICS
<style color=#00ffffff size=1>.</style>            Writes to a closed pipe generate an exception `write on
<style color=#00ffffff size=1>.</style>            closed pipe'. Persistently reading a closed pipe after
<style color=#00ffffff size=1>.</style>            reading end-of-file will result in a read error.

<style color=#00ffffff size=1>.</style>                                Inferno Manual
