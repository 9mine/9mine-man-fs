<action name=CMD(3)>CMD(3)</action>                                                     <action name=CMD(3)>CMD(3)</action>

NAME
<style color=#00ffffff size=1>.</style>            cmd - interface to host operating system commands

SYNOPSIS
<style color=#00ffffff size=1>.</style>            bind -a '#C' /

<style color=#00ffffff size=1>.</style>            /cmd/clone
<style color=#00ffffff size=1>.</style>            /cmd/n/ctl
<style color=#00ffffff size=1>.</style>            /cmd/n/data
<style color=#00ffffff size=1>.</style>            /cmd/n/stderr
<style color=#00ffffff size=1>.</style>            /cmd/n/status
<style color=#00ffffff size=1>.</style>            /cmd/n/wait

DESCRIPTION
<style color=#00ffffff size=1>.</style>            Cmd provides a way to run commands in the underlying
<style color=#00ffffff size=1>.</style>            operating system's command interpreter when Inferno is
<style color=#00ffffff size=1>.</style>            running hosted, in <action name=emu(1)>emu(1)</action>. It serves a three-level directory
<style color=#00ffffff size=1>.</style>            that is conventionally bound behind the root directory. The
<style color=#00ffffff size=1>.</style>            top of the hierarchy is a directory cmd, that contains a
<style color=#00ffffff size=1>.</style>            clone file and zero or more numbered directories. Each
<style color=#00ffffff size=1>.</style>            directory represents a distinct connection to the host's
<style color=#00ffffff size=1>.</style>            command interpreter. The directory contains five files: ctl,
<style color=#00ffffff size=1>.</style>            data, stderr, status and wait, used as described below.
<style color=#00ffffff size=1>.</style>            Opening the clone file reserves a connection: it is
<style color=#00ffffff size=1>.</style>            equivalent to opening the ctl file of an unused connection
<style color=#00ffffff size=1>.</style>            directory, creating a new one if necessary.

<style color=#00ffffff size=1>.</style>            The file ctl controls a connection. When read, it returns
<style color=#00ffffff size=1>.</style>            the decimal number n of its connection directory. Thus,
<style color=#00ffffff size=1>.</style>            opening and reading clone allocates a connection directory
<style color=#00ffffff size=1>.</style>            and reveals the number of the allocated directory, allowing
<style color=#00ffffff size=1>.</style>            the other files to be named (eg, /cmd/n/data).

<style color=#00ffffff size=1>.</style>            Ctl accepts the following textual commands, allowing quoting
<style color=#00ffffff size=1>.</style>            as interpreted by parsecmd(10.2):

<style color=#00ffffff size=1>.</style>            dir wdir
<style color=#00ffffff size=1>.</style>                 Run the host command in directory wdir, which is a
<style color=#00ffffff size=1>.</style>                 directory on the host system . Issue this request
<style color=#00ffffff size=1>.</style>                 before starting the command. By default, commands are
<style color=#00ffffff size=1>.</style>                 run in the Inferno root directory on the host system.

<style color=#00ffffff size=1>.</style>            exec command args ...
<style color=#00ffffff size=1>.</style>                 Spawn a host process to run the command with arguments
<style color=#00ffffff size=1>.</style>                 as given. The write returns with an error, setting the
<style color=#00ffffff size=1>.</style>                 error string, if anything prevents starting the
<style color=#00ffffff size=1>.</style>                 command. If write returns successfully, the command has
<style color=#00ffffff size=1>.</style>                 started, and its standard input and output may be
<style color=#00ffffff size=1>.</style>                 accessed through data, and its error output accessed
<style color=#00ffffff size=1>.</style>                 through stderr (see below). If arguments containing
<style color=#00ffffff size=1>.</style>                 white space are quoted (following the conventions of sh
<style color=#00ffffff size=1>.</style>                 (1) or parsecmd(10.2)), they are requoted by cmd using
<style color=#00ffffff size=1>.</style>                 the host command interpreter's conventions so that
<style color=#00ffffff size=1>.</style>                 command sees exactly the same arguments as were written
<style color=#00ffffff size=1>.</style>                 to ctl.

<style color=#00ffffff size=1>.</style>            kill Kill the host command immediately.

<style color=#00ffffff size=1>.</style>            killonclose
<style color=#00ffffff size=1>.</style>                 Set the device to kill the host command when the ctl
<style color=#00ffffff size=1>.</style>                 file is closed (normally all files must be closed, see
<style color=#00ffffff size=1>.</style>                 below).

<style color=#00ffffff size=1>.</style>            nice \[n\]
<style color=#00ffffff size=1>.</style>                 Run the host command at less than normal scheduling
<style color=#00ffffff size=1>.</style>                 priority. Issue this request before starting the
<style color=#00ffffff size=1>.</style>                 command. The optional value n, in the range 1 to 3,
<style color=#00ffffff size=1>.</style>                 indicates the degree of `niceness' (default: 1).

<style color=#00ffffff size=1>.</style>            The data file provides a connection to the input and output
<style color=#00ffffff size=1>.</style>            of a previously-started host command. It must be opened
<style color=#00ffffff size=1>.</style>            separately for reading and for writing. When opened for
<style color=#00ffffff size=1>.</style>            reading, it returns data that the command writes to its
<style color=#00ffffff size=1>.</style>            standard output\; when closed, further writes by the command
<style color=#00ffffff size=1>.</style>            will receive the host equivalent of `write to closed pipe'.
<style color=#00ffffff size=1>.</style>            When opened for writing, data written to the file can be
<style color=#00ffffff size=1>.</style>            read by the command on its standard input\; when closed,
<style color=#00ffffff size=1>.</style>            further reads by the command will see the host equivalent of
<style color=#00ffffff size=1>.</style>            `end of file'. (Unfortunately there is no way to know when
<style color=#00ffffff size=1>.</style>            the command needs input.)

<style color=#00ffffff size=1>.</style>            The stderr file provides a similar read-only connection to
<style color=#00ffffff size=1>.</style>            the error output from the command. If the stderr file is not
<style color=#00ffffff size=1>.</style>            opened, the error output will be discarded.

<style color=#00ffffff size=1>.</style>            Once started, a host command runs until it terminates or
<style color=#00ffffff size=1>.</style>            until it is killed, by using the kill or killonclose
<style color=#00ffffff size=1>.</style>            requests above, or by closing all ctl, data and wait files
<style color=#00ffffff size=1>.</style>            for a connection.

<style color=#00ffffff size=1>.</style>            The read-only status file provides a single line giving the
<style color=#00ffffff size=1>.</style>            status of the connection (not the command), of the form:

<style color=#00ffffff size=1>.</style>                 cmd/n opens state wdir arg0

<style color=#00ffffff size=1>.</style>            where the fields are separated by white space. The meaning
<style color=#00ffffff size=1>.</style>            of each field is:

<style color=#00ffffff size=1>.</style>            n    The cmd directory number.

<style color=#00ffffff size=1>.</style>            opens
<style color=#00ffffff size=1>.</style>                 The decimal number of open file descriptors for ctl,
<style color=#00ffffff size=1>.</style>                 data and wait.

<style color=#00ffffff size=1>.</style>            state
<style color=#00ffffff size=1>.</style>                 The status of the interface in directory n:
<style color=#00ffffff size=1>.</style>                 Open     Allocated for use but not yet running a
<style color=#00ffffff size=1>.</style>                          command.
<style color=#00ffffff size=1>.</style>                 Execute  Running a command.
<style color=#00ffffff size=1>.</style>                 Done     Command terminated: status available in the
<style color=#00ffffff size=1>.</style>                          status file (or via wait).
<style color=#00ffffff size=1>.</style>                 Close    Command completed. Available for reallocation
<style color=#00ffffff size=1>.</style>                          via clone.

<style color=#00ffffff size=1>.</style>            wdir The command's initial working directory on the host.

<style color=#00ffffff size=1>.</style>            arg0 The host command name (without arguments).

<style color=#00ffffff size=1>.</style>            The read-only wait file must be opened before starting a
<style color=#00ffffff size=1>.</style>            command via ctl. When read, it blocks until the command
<style color=#00ffffff size=1>.</style>            terminates. The read then returns with a single status line,
<style color=#00ffffff size=1>.</style>            to be parsed using String->unquote (see <action name=string(2)>string(2)</action>). There
<style color=#00ffffff size=1>.</style>            are five fields: host process ID (or 0 if unknown)\; time the
<style color=#00ffffff size=1>.</style>            command spent in user code in milliseconds (or 0)\; time
<style color=#00ffffff size=1>.</style>            spent in system code in milliseconds (or 0)\; real time in
<style color=#00ffffff size=1>.</style>            milliseconds (or 0)\; and a string giving the exit status of
<style color=#00ffffff size=1>.</style>            the command. The exit status is host-dependent, except that
<style color=#00ffffff size=1>.</style>            an empty string means success, and a non-empty string
<style color=#00ffffff size=1>.</style>            contains a diagnostic.

<style color=#00ffffff size=1>.</style>         Command execution
<style color=#00ffffff size=1>.</style>            In all cases, the command runs in the host operating
<style color=#00ffffff size=1>.</style>            system's own file name space in which <action name=emu(1)>emu(1)</action> was started.
<style color=#00ffffff size=1>.</style>            All file names will be interpreted in that space, not
<style color=#00ffffff size=1>.</style>            Inferno's. For example, on Unix and Plan 9, / refers to the
<style color=#00ffffff size=1>.</style>            host's file system root, not Inferno's\; the effects of
<style color=#00ffffff size=1>.</style>            mounts and binds will not be visible\; nor will Inferno
<style color=#00ffffff size=1>.</style>            services be available except by network connection.

<style color=#00ffffff size=1>.</style>            On Unix systems, the command is run by the execvp system
<style color=#00ffffff size=1>.</style>            call, using the Unix user and group ID of the user that
<style color=#00ffffff size=1>.</style>            started <action name=emu(1)>emu(1)</action>, unless it was started by the super-user, in
<style color=#00ffffff size=1>.</style>            which case cmd attempts to set the Unix user ID and group ID
<style color=#00ffffff size=1>.</style>            to those of a Unix user corresponding to the current Inferno
<style color=#00ffffff size=1>.</style>            user's name, and failing that, to user and group nobody.

<style color=#00ffffff size=1>.</style>            On Plan 9, the command is run with the system call exec,
<style color=#00ffffff size=1>.</style>            first trying the command name as-is\; if that fails and the
<style color=#00ffffff size=1>.</style>            name does not start with #, /, ./ or ../, cmd attempts to
<style color=#00ffffff size=1>.</style>            exec /bin/command. The command runs using the Plan 9
<style color=#00ffffff size=1>.</style>            identity of the user that started <action name=emu(1)>emu(1)</action>. Each connection
<style color=#00ffffff size=1>.</style>            has its own name space.

<style color=#00ffffff size=1>.</style>            On Windows systems, the command must be a binary executable
<style color=#00ffffff size=1>.</style>            (not built into the command interpreter) in the current
<style color=#00ffffff size=1>.</style>            path. It is always run with the same Windows user identity
<style color=#00ffffff size=1>.</style>            as started <action name=emu(1)>emu(1)</action>. The arguments given to the exec request
<style color=#00ffffff size=1>.</style>            are requoted as described above so as to present the same
<style color=#00ffffff size=1>.</style>            arguments to the command via the Windows command
<style color=#00ffffff size=1>.</style>            interpreter. The arguments are otherwise unmodified. In
<style color=#00ffffff size=1>.</style>            particular, no attempt is made to convert slashes to
<style color=#00ffffff size=1>.</style>            backslashes in a vain attempt to convert file name syntax to
<style color=#00ffffff size=1>.</style>            Windows conventions. (In fact, most Windows applications
<style color=#00ffffff size=1>.</style>            will accept / as a separate in file names, provided the
<style color=#00ffffff size=1>.</style>            drive letter precedes the whole name to prevent its
<style color=#00ffffff size=1>.</style>            interpretation as a command option.)

SOURCE
<style color=#00ffffff size=1>.</style>            /emu/port/devcmd.c
<style color=#00ffffff size=1>.</style>            /emu/*/cmd.c

SEE ALSO
<style color=#00ffffff size=1>.</style>            <action name=emu(1)>emu(1)</action>, <action name=os(1)>os(1)</action>

DIAGNOSTICS
<style color=#00ffffff size=1>.</style>            A write to ctl returns with an error and sets the error
<style color=#00ffffff size=1>.</style>            string if a command cannot be started or killed
<style color=#00ffffff size=1>.</style>            successfully.

<style color=#00ffffff size=1>.</style>                                Inferno Manual
