<action name=CAP(3)>CAP(3)</action>                                                     <action name=CAP(3)>CAP(3)</action>

NAME
<style color=#00ffffff size=1>.</style>            cap - capability for changing user name

SYNOPSIS
<style color=#00ffffff size=1>.</style>            bind #Â¤ dir

<style color=#00ffffff size=1>.</style>            dir/caphash
<style color=#00ffffff size=1>.</style>            dir/capuse

DESCRIPTION
<style color=#00ffffff size=1>.</style>            Cap allows a process owned by the host owner (see eve(10.2))
<style color=#00ffffff size=1>.</style>            to give another process on the same machine a capability to
<style color=#00ffffff size=1>.</style>            set its user name to a specified user. The capability is a
<style color=#00ffffff size=1>.</style>            string of the form:

<style color=#00ffffff size=1>.</style>                 \[ fromuser@ \] touser@key

<style color=#00ffffff size=1>.</style>            where fromuser is a process's current user name, touser is
<style color=#00ffffff size=1>.</style>            its new user name, and key is a string of random characters
<style color=#00ffffff size=1>.</style>            (eg, produced by <action name=security-random(2)>security-random(2)</action>).

<style color=#00ffffff size=1>.</style>            Caphash is a write-only file that can only be opened by the
<style color=#00ffffff size=1>.</style>            host owner. A process enables the use of a capability by
<style color=#00ffffff size=1>.</style>            writing the keyed hash of fromuser@touser to caphash. The
<style color=#00ffffff size=1>.</style>            hash is computed using Keyring->hmac_sha1 as follows:

<style color=#00ffffff size=1>.</style>                 kr := load Keyring Keyring->PATH\;
<style color=#00ffffff size=1>.</style>                 IPint: import kr\;
<style color=#00ffffff size=1>.</style>                 users := sys->sprint("%s@%s", fromuser, touser)\;
<style color=#00ffffff size=1>.</style>                 cap := sys->sprint("%s@%s", users, key)\;
<style color=#00ffffff size=1>.</style>                 digest := array\[Keyring->SHA1dlen\] of byte\;
<style color=#00ffffff size=1>.</style>                 ausers := array of byte users\;
<style color=#00ffffff size=1>.</style>                 kr->hmac_sha1(ausers, len ausers, array of byte key, digest, nil)\;
<style color=#00ffffff size=1>.</style>                 if(sys->write(caphashfd, digest, len digest) < 0)
<style color=#00ffffff size=1>.</style>                 	error()\;

<style color=#00ffffff size=1>.</style>            The capability (eg, cap in the example) can then be passed
<style color=#00ffffff size=1>.</style>            to another process.

<style color=#00ffffff size=1>.</style>            Capuse is a write-only file that can be opened by any
<style color=#00ffffff size=1>.</style>            process. It can then write a capability string to change its
<style color=#00ffffff size=1>.</style>            user name, provided that capability has previously been
<style color=#00ffffff size=1>.</style>            enabled by the host owner via caphash, and if the capability
<style color=#00ffffff size=1>.</style>            included a fromuser, the writing process currently has that
<style color=#00ffffff size=1>.</style>            user name. After a successful write, the writing process
<style color=#00ffffff size=1>.</style>            will be owned by touser. Any capability can be used at most
<style color=#00ffffff size=1>.</style>            once.

<style color=#00ffffff size=1>.</style>            A capability enabled by caphash has a limited lifetime, on
<style color=#00ffffff size=1>.</style>            the order of 30 seconds. Caphash can be removed by the host
<style color=#00ffffff size=1>.</style>            owner to prevent its further use.

SOURCE
<style color=#00ffffff size=1>.</style>            /emu/port/devcap.c
<style color=#00ffffff size=1>.</style>            /os/port/devcap.c

SEE ALSO
<style color=#00ffffff size=1>.</style>            <action name=keyring-sha1(2)>keyring-sha1(2)</action>, <action name=cons(3)>cons(3)</action>, <action name=intro(5)>intro(5)</action>, eve(10.2)

DIAGNOSTICS
<style color=#00ffffff size=1>.</style>            A write to capuse without a previous write to caphash sets
<style color=#00ffffff size=1>.</style>            the error string to ``invalid capability''.

<style color=#00ffffff size=1>.</style>                                Inferno Manual
