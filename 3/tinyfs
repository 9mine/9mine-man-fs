<action name=TINYFS(3)>TINYFS(3)</action>                                               <action name=TINYFS(3)>TINYFS(3)</action>

NAME
<style color=#00ffffff size=1>.</style>            tinyfs - file system for miniscule devices

SYNOPSIS
<style color=#00ffffff size=1>.</style>            bind -c #Fname /nvfs

DESCRIPTION
<style color=#00ffffff size=1>.</style>            Tinyfs provides file system access to the contents of
<style color=#00ffffff size=1>.</style>            low-capacity devices, ranging from several hundred bytes (at
<style color=#00ffffff size=1>.</style>            least 144 bytes) to at most the order of a kilobyte. It is
<style color=#00ffffff size=1>.</style>            provided to support file system access to small non-volatile
<style color=#00ffffff size=1>.</style>            memories, as for instance are found in some real-time clock
<style color=#00ffffff size=1>.</style>            chips, where IDs, keys, PINs, certificates and the like
<style color=#00ffffff size=1>.</style>            might be stored by either client or server.

<style color=#00ffffff size=1>.</style>            The file system has only one directory, its root, which can
<style color=#00ffffff size=1>.</style>            contain only files. Once created, a write can only append to
<style color=#00ffffff size=1>.</style>            a file\; random updates are not allowed, although the file
<style color=#00ffffff size=1>.</style>            could be truncated and rewritten.

<style color=#00ffffff size=1>.</style>            The device specifier following the #F device name is the
<style color=#00ffffff size=1>.</style>            name of a file in /dev on which the tiny file system will
<style color=#00ffffff size=1>.</style>            live. For instance, #Fnvram refers to /dev/nvram. The device
<style color=#00ffffff size=1>.</style>            must allow seek and write. During the attach, the system
<style color=#00ffffff size=1>.</style>            scans the device, checking the file system structure by
<style color=#00ffffff size=1>.</style>            building a table of files, and checking a checksum stored in
<style color=#00ffffff size=1>.</style>            each block\; inconsistent structure is reinitialised, and
<style color=#00ffffff size=1>.</style>            thus a previously unused device will emerge correctly
<style color=#00ffffff size=1>.</style>            formatted as an empty tiny file system.

FILES
<style color=#00ffffff size=1>.</style>            /nvfs  conventional mount point used by <action name=init(8)>init(8)</action>
SOURCE
<style color=#00ffffff size=1>.</style>            /os/port/devtinyfs.c

<style color=#00ffffff size=1>.</style>                                Inferno Manual
