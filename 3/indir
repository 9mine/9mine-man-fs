<action name=INDIR(3)>INDIR(3)</action>                                                 <action name=INDIR(3)>INDIR(3)</action>

NAME
<style color=#00ffffff size=1>.</style>            indir - attach to device indirectly by name

SYNOPSIS
<style color=#00ffffff size=1>.</style>            bind  #*name \[\c !spec\c \]  dir

DESCRIPTION
<style color=#00ffffff size=1>.</style>            Indir allows any other device to be referred to by its name
<style color=#00ffffff size=1>.</style>            instead of its perhaps arbitrary single character type\;
<style color=#00ffffff size=1>.</style>            indir itself has the type character `*'. It has no name
<style color=#00ffffff size=1>.</style>            space of its own. On attach (see <action name=attach(5)>attach(5)</action>) indir interprets
<style color=#00ffffff size=1>.</style>            its device specifier string as the name of a device to which
<style color=#00ffffff size=1>.</style>            it should attach, optionally followed by specifier spec for
<style color=#00ffffff size=1>.</style>            that device, separated from the name by an exclamation mark.
<style color=#00ffffff size=1>.</style>            Attaching to indir (eg, by <action name=sys-bind(2)>sys-bind(2)</action>), effectively
<style color=#00ffffff size=1>.</style>            attaches to the device with the given name and spec, and all
<style color=#00ffffff size=1>.</style>            subsequent operations in the resulting name space access
<style color=#00ffffff size=1>.</style>            that device, not indir itself.

<style color=#00ffffff size=1>.</style>            For example, to access <action name=cap(3)>cap(3)</action>, one could write:

<style color=#00ffffff size=1>.</style>                 bind -a '#*cap' /dev

<style color=#00ffffff size=1>.</style>            The following commands both list the second instance of
<style color=#00ffffff size=1>.</style>            <action name=ether(3)>ether(3)</action>, first directly, then using indir:

<style color=#00ffffff size=1>.</style>                 ls '#l1'
<style color=#00ffffff size=1>.</style>                 ls '#*ether!1'

<style color=#00ffffff size=1>.</style>            The file /dev/drivers (see <action name=cons(3)>cons(3)</action>) lists the names of
<style color=#00ffffff size=1>.</style>            currently configured devices.

<style color=#00ffffff size=1>.</style>         Credit
<style color=#00ffffff size=1>.</style>            Invented by Bruce Ellis for Lucent's internal Research
<style color=#00ffffff size=1>.</style>            Inferno to help name dynamically-loaded device drivers. This
<style color=#00ffffff size=1>.</style>            is a re-implementation.

SOURCE
<style color=#00ffffff size=1>.</style>            /emu/port/devindir.c
<style color=#00ffffff size=1>.</style>            /os/port/devindir.c

SEE ALSO
<style color=#00ffffff size=1>.</style>            <action name=bind(1)>bind(1)</action>, <action name=sys-bind(2)>sys-bind(2)</action>, <action name=cons(3)>cons(3)</action>

DIAGNOSTICS
<style color=#00ffffff size=1>.</style>            If name is not configured, indir returns a suitable
<style color=#00ffffff size=1>.</style>            diagnostic in the error string.

BUGS
<style color=#00ffffff size=1>.</style>            Arguably the kernel could simply look up the name itself.

<style color=#00ffffff size=1>.</style>                                Inferno Manual
